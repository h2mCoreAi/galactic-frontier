{"type": "entity", "name": "Galactic Frontier", "entityType": "project", "observations": ["Space shooter game built with Phaser.js and Node.js", "Mono-repo structure with shared, single-player, and MMO components", "Currently in early development phase", "Uses PostgreSQL for data persistence", "Added comprehensive galactic-frontier-configs.json following Dragonspire structure", "Configuration includes all ports, database schema, environment variables, file paths", "Documents PM2 processes, network endpoints, API routes, and database tables", "Includes game mechanics, security settings, development config, and conflict prevention notes", "Based on postgresql-config.json and actual database schema with 4 tables: users, profiles, sp_highscores, sp_sessions", "Configuration file moved to global location: /srv/global-configs/galactic-frontier-configs.json", "Added GLOBAL-CONFIGS-README.md in repository as reference", "Memory graph exported to memory-bank.json for persistence", "Comprehensive documentation now available for resource usage and conflict prevention"]}
{"type": "entity", "name": "Project Structure", "entityType": "architecture", "observations": ["Root contains: shared/, assets/, core/, utils/, config/, single-player/, mmo/, tests/, docs/", "Single-player is primary focus with src/, leaderboard/, dashboard/ subdirs", "MMO component planned for future with client/ and server/ subdirs", "Configuration centralized in config/config.json", "Added GLOBAL-CONFIGS-README.md for external configuration references", "Memory-bank.json created for knowledge graph persistence", "Configuration file now located outside repository at /srv/global-configs/", ".gitignore file added with comprehensive ignore patterns for the full technology stack", ".gitignore file added with comprehensive ignore patterns for the full technology stack"]}
{"type": "entity", "name": "Security Issues", "entityType": "security", "observations": ["Database password 'galactic_frontier' stored in plaintext", "CORS configured with wildcard '*' allowing all origins", "Connection strings exposed in configuration files", "No SSL/TLS configuration for database connections", "Discord OAuth credentials are placeholder but exposed"]}
{"type": "entity", "name": "Configuration Problems", "entityType": "configuration", "observations": ["File structure references don't match actual directory structure", "Config references 'singlePlayer/' but actual is 'single-player/'", "Config references 'shared/config.json' but actual is 'config/config.json'", "Ports listed in 'avoid' list are actually being used", "Missing environment-specific configurations", "Created galactic-frontier-configs.json to address configuration documentation needs", "Resolved file path mismatches by documenting actual project structure", "Added comprehensive resource usage documentation", "Included conflict prevention notes to avoid port/database conflicts"]}
{"type": "entity", "name": "Development Status", "entityType": "status", "observations": ["Git repository initialized with main and dev branches", "Basic directory structure created and committed", "README files added for all major directories", "Config.json created with game settings", "No actual game code implemented yet", "Added comprehensive .gitignore file with Node.js/TypeScript, build outputs, environment files, IDE/OS files, PM2 processes, database files, testing artifacts, and secrets", "Repository now properly configured for development with appropriate files ignored", "Added comprehensive .gitignore file with Node.js/TypeScript, build outputs, environment files, IDE/OS files, PM2 processes, database files, testing artifacts, and secrets", "Repository now properly configured for development with appropriate files ignored"]}
{"type": "entity", "name": "Database Config", "entityType": "database", "observations": ["PostgreSQL on port 5433", "Database name: galactic_frontier", "Username: galactic_frontier", "Uses raw SQL, no ORM", "Manual migration scripts planned", "4 database tables identified: users, profiles, sp_highscores, sp_sessions", "Users table: id, discord_id, auth_provider, username, email, created_at", "Profiles table: user_id, avatar_url, bio, total_score, level, updated_at", "SP Highscores: id, user_id, score, level_reached, play_time, timestamp", "SP Sessions: id, user_id, session_id, start_time, end_time, score"]}
{"type": "entity", "name": "Game Configuration", "entityType": "game_config", "observations": ["Ship settings: maxSpeed 5, thrust 0.1, maxHealth 100, size 20", "Three enemy types: small, medium, large with different stats", "Projectile settings: speed 7, fanShotCount 10, cooldown 10", "Game progression: scoreToLevelUp 250, spawn intervals configurable", "Power-ups: health (+10 HP), fan-shot (600 frames duration)"]}
{"type": "relation", "from": "Galactic Frontier", "to": "Project Structure", "relationType": "has_architecture"}
{"type": "relation", "from": "Galactic Frontier", "to": "Security Issues", "relationType": "has_security_concerns"}
{"type": "relation", "from": "Galactic Frontier", "to": "Configuration Problems", "relationType": "has_configuration_issues"}
{"type": "relation", "from": "Galactic Frontier", "to": "Development Status", "relationType": "has_development_status"}
{"type": "relation", "from": "Galactic Frontier", "to": "Database Config", "relationType": "uses_database"}
{"type": "relation", "from": "Galactic Frontier", "to": "Game Configuration", "relationType": "has_game_settings"}
{"type": "relation", "from": "Project Structure", "to": "Game Configuration", "relationType": "contains_config"}
{"type": "relation", "from": "Configuration Problems", "to": "Security Issues", "relationType": "includes_security_risks"}
{"type": "relation", "from": "Database Config", "to": "Security Issues", "relationType": "has_security_risks"}
